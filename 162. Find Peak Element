class Solution:
  def findPeakElement(self, nums: List[int]) -> int:
    #Solution 1: O(n) / O(1)
    for i in range(len(nums)-1):
      #if increasing only, will return the last element
      #if decreasing only, will return the first element
      #if peak in the middle, will return at first point there is a decreasing trend
      if nums[i+1] < nums[i]: return i
    return len(nums) - 1
  
    #Solution 2: O(log n) / O(n)
    nums = [float('-inf')] + nums + [float('-inf')]
    l, r = 1, len(nums) - 2
    while l <= r:
      m = l + (r - l) // 2
      if nums[m-1] < nums[m] > nums[m+1]: return m - 1
      elif nums[m] < nums[m+1]: l = m + 1 #move to subarray with greater value
      else: r = m - 1
