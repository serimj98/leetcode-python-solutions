class Solution:
  def findAllConcatenatedWordsInADict(self, words: List[str]) -> List[str]:
    #Solution 1: O(n*len(word)^2) / O(n)
    wordSet = set(words)
    sol = []
    @lru_cache(None)
    def dfs(word):
      for i in range(1, len(word)):
        prefix, suffix = word[:i], word[i:]
        if prefix in wordSet and suffix in wordSet: return True
        if prefix in wordSet and dfs(suffix): return True
    for word in words:
      if dfs(word): sol.append(word)
    return sol
