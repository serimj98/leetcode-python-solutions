class Solution:
  def findMinArrowShots(self, points: List[List[int]]) -> int:
    #Solution 1: O(n log n) / O(1)
    if not points: return 0
    sol = 0
    points.sort(key = lambda x: x[0])
    for i in range(len(points)):
      if i > 0 and points[i][0] <= points[i-1][1]:
        points[i] = [max(points[i-1][0], points[i][0]), min(points[i-1][1], points[i][1])]
      else: sol += 1
    return sol
    
    #Solution 2: O(n log n) / O(1)
    if not points: return 0
    sol = 0
    points.sort(key = lambda x: x[1]) #by endpoint
    lastEnd = float('-inf')
    for point in points:
      if point[0] > lastEnd:
        sol += 1
        lastEnd = point[1]
    return sol
