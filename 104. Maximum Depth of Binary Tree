# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
  def maxDepth(self, root: TreeNode) -> int:
    #Solution 1 Recursive: O(n) / O(h)
    self.sol = 0
    def recursive(node, depth):
      if not node: 
        self.sol = max(self.sol, depth)
        return
      recursive(node.left, depth + 1)
      recursive(node.right, depth + 1)
    recursive(root, 0)
    return self.sol
    
    #Solution 2 Iterative: O(n) / O(h)
    if not root: return 0
    stack = [(root, 1)]
    self.sol = 0
    while stack:
      node, depth = stack.pop()
      self.sol = max(self.sol, depth)
      if node.left: stack.append((node.left, depth + 1))
      if node.right: stack.append((node.right, depth + 1))
    return self.sol
