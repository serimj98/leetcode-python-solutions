# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
  def sumNumbers(self, root: Optional[TreeNode]) -> int:
    #Solution 1 Recursive: O(n) / O(h)
    self.sol = 0
    def recursive(node, cur):
      if not node: return
      cur = cur*10 + node.val
      if not node.left and not node.right: #leaf node
        self.sol += cur
      recursive(node.left, cur)
      recursive(node.right, cur)
    recursive(root, 0)
    return self.sol

    #Solution 2 Iterative: O(n) / O(h)
    stack = [(root, 0)]
    sol = 0
    while stack:
      node, cur = stack.pop()
      cur = cur*10 + node.val
      if not node.left and not node.right:
        sol += cur
      if node.right: stack.append((node.right, cur))
      if node.left: stack.append((node.left, cur))
    return sol
