class Solution:
  def updateBoard(self, board: List[List[str]], click: List[int]) -> List[List[str]]:
    #Solution 1: O(board) / O(board)
    def recursive(click):
      if board[click[0]][click[1]] == 'E':
        dirs = [[-1,-1], [-1,0], [-1,1], [0,-1], [0,1], [1,-1], [1,0], [1,1]]
        count = 0
        for d in dirs:
          if len(board) > click[0]+d[0] >= 0 and len(board[0]) > click[1]+d[1] >= 0:
            if board[click[0]+d[0]][click[1]+d[1]] == 'M':
              count += 1
        if not count:
          board[click[0]][click[1]] = 'B'
        else:
          board[click[0]][click[1]] = str(count)
          return #return, so count doesn't get overwritten when entering recursive call
        for d in dirs:
          if len(board) > click[0]+d[0] >= 0 and len(board[0]) > click[1]+d[1] >= 0:
            recursive([click[0]+d[0], click[1]+d[1]])
          
    if board[click[0]][click[1]] == 'M':
      board[click[0]][click[1]] = 'X'
      return board
    
    recursive(click)
    return board
