class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        #Solution 1: O(n) / O(n)
        sol = 0
        seen = Counter()
        l, r = 0, 0
        while r < len(s):
            seen[s[r]] += 1
            while seen[s[r]] > 1:
                seen[s[l]] -= 1 #decrement left pointer until count == 1 for right pointer
                l += 1
            sol = max(sol, r - l + 1)
            r += 1
        return sol

        #Solution 2: O(n) / O(n)
        l, r = 0, 0
        seen = set()
        sol = 0
        while l <= r and r < len(s):
            if s[r] not in seen:
                seen.add(s[r])
                r += 1
            else:
                seen.remove(s[l])
                l += 1
            sol = max(sol, r - l)
        return sol
