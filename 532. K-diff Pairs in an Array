class Solution:
  def findPairs(self, nums: List[int], k: int) -> int:
    #Solution 1: O(n) / O(n)
    numsCounter = Counter(nums)
    sol = 0
    for key, value in numsCounter.items():
      if k and key + k in numsCounter: sol += 1
      elif not k and value >= 2: sol += 1
    return sol
  
    #Solution 2: O(n log n) / O(n)
    nums.sort() #[1,1,3,4,5]
    l, r = 0, 1
    sol = 0
    while l < len(nums) and r < len(nums):
      diff = abs(nums[l] - nums[r])
      if l >= r: r += 1 #reset r when l becomes greater than r
      elif diff == k:
        sol += 1
        l += 1
        while l < len(nums) and nums[l] == nums[l-1]: #disregards duplicates
          l += 1
      elif diff < k: r += 1
      elif diff > k: l += 1
    return sol
