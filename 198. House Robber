class Solution:
  def rob(self, nums: List[int]) -> int:
    #Solution 1: O(n) / O(n)
    if len(nums) < 2: return max(nums)
    dp = [0] * len(nums)
    dp[0], dp[1] = nums[0], max(nums[0], nums[1])
    for i in range(2, len(nums)):
      dp[i] = max(dp[i-2] + nums[i], dp[i-1])
    return dp[-1]
  
    #Solution 2: O(n) / O(1)
    if len(nums) < 2: return max(nums)
    prev, cur = nums[0], max(nums[0], nums[1])
    for i in range(2, len(nums)):
      prev, cur = cur, max(prev + nums[i], cur)
    return cur
