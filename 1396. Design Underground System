class UndergroundSystem:

  def __init__(self):
    #{id: [start station, start time]}
    self.start = {}
    #{[start station, end station]: [total time from start-end, # of trips]}
    self.journey = defaultdict(lambda: [0, 0])

  def checkIn(self, id: int, stationName: str, t: int) -> None:
    self.start[id] = [stationName, t]

  def checkOut(self, id: int, stationName: str, t: int) -> None:
    startStation, startTime = self.start.pop(id)
    self.journey[(startStation, stationName)][0] += (t - startTime)
    self.journey[(startStation, stationName)][1] += 1

  def getAverageTime(self, startStation: str, endStation: str) -> float:
    totalTime, totalTrips = self.journey[(startStation, endStation)]
    return totalTime / totalTrips
   

# Your UndergroundSystem object will be instantiated and called as such:
# obj = UndergroundSystem()
# obj.checkIn(id,stationName,t)
# obj.checkOut(id,stationName,t)
# param_3 = obj.getAverageTime(startStation,endStation)
