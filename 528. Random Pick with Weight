class Solution:

  def __init__(self, w: List[int]):
    #Solution 1: O(n) / O(1)
    wSum = sum(w)
    for i in range(len(w)):
      w[i] /= wSum
    for i in range(1, len(w)):
      w[i] += w[i-1]
    self.w = w

  def pickIndex(self) -> int:
    #Solution 1: O(n) / O(1)
    pick = random.uniform(0, 1)
    for i in range(len(self.w)):
      if pick <= self.w[i]: return i
    
    #Solution 2: O(log n) / O(1)
    pick = random.uniform(0, 1)
    l, r = 0, len(self.w) - 1
    while l <= r:
      m = (l + r) // 2
      if self.w[m] == pick: return m
      elif self.w[m] > pick: r = m - 1
      else: l = m + 1
    return l


# Your Solution object will be instantiated and called as such:
# obj = Solution(w)
# param_1 = obj.pickIndex()
