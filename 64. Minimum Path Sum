class Solution:
  def minPathSum(self, grid: List[List[int]]) -> int:
    #Solution 1: O(r*c) / O(r*c)
    dp = [[0] * len(grid[0]) for i in range(len(grid))]
    dp[0][0] = grid[0][0]
    for i in range(1, len(grid[0])):
      dp[0][i] = dp[0][i-1] + grid[0][i]
    for j in range(1, len(grid)):
      dp[j][0] = dp[j-1][0] + grid[j][0]
      
    for r in range(1, len(grid)):
      for c in range(1, len(grid[0])):
        if (r, c) != (0, 0):
          dp[r][c] = min(dp[r-1][c], dp[r][c-1]) + grid[r][c]
    return dp[-1][-1]
  
    #Solution 2: O(r*c) / O(1)
    for i in range(1, len(grid[0])):
      grid[0][i] += grid[0][i-1]
    for j in range(1, len(grid)):
      grid[j][0] += grid[j-1][0]
    for r in range(1, len(grid)):
      for c in range(1, len(grid[0])):
        grid[r][c] += min(grid[r-1][c], grid[r][c-1])
    return grid[-1][-1]
