# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
  def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':
    #Solution 1: O(n) / O(1)
    def recursive(node):
      if not node or node == p or node == q: return node
      #if p or q is in left or right, left or right will store the value of p or q
      #if p or q does not exist in path, left or right will contain None
      left = recursive(node.left)
      right = recursive(node.right)
      if left and right: return node
      else: return left or right
    return recursive(root)
