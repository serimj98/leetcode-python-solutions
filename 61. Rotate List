# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
  def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
    #Solution 1: O(n) / O(1)
    if not head: return None
    cur = head
    listLen = 0
    while cur:
      listLen += 1
      cur = cur.next
    k %= listLen
    if k == 0: return head
    cur = head
    for i in range(listLen - k - 1):
      cur = cur.next
    temp = cur.next
    cur.next = None
    newHead = temp
    while temp.next:
      temp = temp.next
    temp.next = head
    return newHead
