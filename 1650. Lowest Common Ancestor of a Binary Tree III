"""
# Definition for a Node.
class Node:
    def __init__(self, val):
        self.val = val
        self.left = None
        self.right = None
        self.parent = None
"""

class Solution:
  def lowestCommonAncestor(self, p: 'Node', q: 'Node') -> 'Node':
    #Solution 1: O(h) / O(h)
    anc = set()
    while p or q:
      if p == q: return p
      if p and p.val in anc: return p
      if q and q.val in anc: return q
      if p:
        anc.add(p.val)
        p = p.parent
      if q:
        anc.add(q.val)
        q = q.parent

    #Solution 2: O(h) / O(1)
    p1, p2 = p, q
    while p1 != p2:
      p1 = p1.parent if p1.parent else q
      p2 = p2.parent if p2.parent else p
    return p1
