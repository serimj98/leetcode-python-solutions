class Solution:
  def countComponents(self, n: int, edges: List[List[int]]) -> int:
    #Solution 1 DFS: O(e+v) / O(e+v)
    adj = defaultdict(list)
    for edge in edges:
      adj[edge[0]].append(edge[1])
      adj[edge[1]].append(edge[0])
    self.sol = 0
    seen = set()
    def dfs(node):
      if node in seen: return
      seen.add(node)
      for nei in adj[node]:
        if nei not in seen:
          dfs(nei)
    for i in range(n):
      if i not in seen: self.sol += 1
      dfs(i)
    return self.sol
