class Solution:
  def restoreIpAddresses(self, s: str) -> List[str]:
    #Solution 1: O(3^4 * 4) / O(3 * 4)
    self.sol = []
    def backtrack(idx, cur, remaining):
      if idx > 4: return #can only have four integers separated by dots
      if idx == 4 and not remaining: #only when there are four integers with nothing left over
        self.sol.append(cur[:-1]) #all elements except last "."
        return
      for i in range(1, len(remaining) + 1):
        #if we can use "0" or any integer between 0 and 255 that have no leading integers
        if remaining[:i] == "0" or (remaining[0] != "0" and 0 < int(remaining[:i]) <= 255):
          backtrack(idx + 1, cur + remaining[:i] + ".", remaining[i:])
    backtrack(0, "", s)
    return self.sol
