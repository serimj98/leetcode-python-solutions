# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
  def closestValue(self, root: Optional[TreeNode], target: float) -> int:
    #Solution 1: O(n) / O(1)
    self.diff = float('inf')
    self.sol = None
    def recursive(node):
      if not node: return
      if abs(target - node.val) < self.diff:
        self.sol = node.val
        self.diff = abs(target - node.val)
      recursive(node.left)
      recursive(node.right)
    recursive(root)
    return self.sol
  
    #Solution 2: O(h) / O(1)
    candidate = root.val
    while root:
      if abs(root.val - target) < abs(candidate - target):
        candidate = root.val
      if target == root.val: return root.val
      elif target < root.val: root = root.left
      else: root = root.right
    return candidate
