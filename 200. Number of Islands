class Solution:
  def numIslands(self, grid: List[List[str]]) -> int:
    #Solution 1: O(V+E) = O(r*c + 4(r*c)) = O(r*c) / O(bd) = O(r*c) (recursive stack)
    #            * v = vertices, e = edges, b = branching factor, d = depth
    sol = 0
    rows = len(grid)
    cols = len(grid[0])
    
    def dfs(r, c):
      if r < 0 or r >= rows or c < 0 or c >= cols or grid[r][c] != "1":
        return
      else:
        grid[r][c] = '#'
        dfs(r+1, c)
        dfs(r-1, c)
        dfs(r, c+1)
        dfs(r, c-1)
    
    for row in range(rows):
      for col in range(cols):
        if grid[row][col] == "1":
          sol += 1
          dfs(row, col)
    
    return sol
