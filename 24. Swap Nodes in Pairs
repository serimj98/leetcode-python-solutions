# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
  def swapPairs(self, head: Optional[ListNode]) -> Optional[ListNode]:
    #Solution 1: O(n) / O(1)
    if not head or not head.next: return head
    dummy = prev = ListNode(0)
    prev.next = head
    while prev.next and prev.next.next: #1, 2 / 3, 4
      first, second = prev.next, prev.next.next #1, 2 / 3, 4
      prev.next = second #None -> 2 / 1 -> 4
      first.next = second.next #1 -> 3 / 3 -> None
      second.next = first #2 -> 1 / 4 -> 3
      prev = prev.next.next #1 / 3
    return dummy.next
