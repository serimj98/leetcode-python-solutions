class Solution:
  def countBits(self, n: int) -> List[int]:
    #Solution 1: O(n^2) / O(n)
    sol = []
    for i in range(n+1):
      bin_rep = str(bin(i))
      sol.append(bin_rep.count("1")) #count is O(n)
    return sol
  
    #Solution 2: O(n) / O(n)
    sol = [0]
    #multiplying by two adds a zero, so will have the same # of 1s
    for i in range(1, n+1):
      #i >> 2 has the same effect as i // 2, as we are dealing with binary
      sol.append(sol[i >> 1] + i % 2)
    return sol
