class Solution:
  def checkPossibility(self, nums: List[int]) -> bool:
    #Solution 1: O(n) / O(1)
    modify = 0
    #if we have more than one decrease or have a stagger, like [2, 3, 1, 2]
    for i in range(1, len(nums)):
      if nums[i] < nums[i-1]:
        #if second element or greater +
        #two elements before is greater +
        #elements surrounding are decreasing
        if modify or (i > 1 and i < len(nums)-1 and nums[i-2] > nums[i] and nums[i+1] < nums[i-1]):
          return False
        modify = 1
    return True
  
    #Solution 2: O(n) / O(1)
    modify = False
    prev = float('-inf')
    for i in range(1, len(nums)):
      if nums[i] < nums[i-1]:
        if modify: return False
        if prev > nums[i]: nums[i] = nums[i-1]
        else: nums[i-1] = nums[i]
        modify = True
      prev = nums[i-1] #two elements before
    return True
